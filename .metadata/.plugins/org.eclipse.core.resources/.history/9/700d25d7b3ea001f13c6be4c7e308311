package com.postMedia.demo.Controller;

import lombok.extern.slf4j.Slf4j;

import org.springframework.boot.configurationprocessor.json.JSONObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;


import java.io.*;
import java.util.HashMap;
import java.util.Map;

@RestController
@Slf4j
@RequestMapping("/compare")
public class FileUploadController {

	public String ARoot;
	public String BRoot;
	
    @PostMapping("/uploadFile")
    public String compareFiles(
            @RequestParam("fileA") MultipartFile fileA,
            @RequestParam("fileB") MultipartFile fileB,
            Model model) {

        Map<String, Object> response = new HashMap<>();

        try {
        	// 업로드된 파일을 저장할 경로 설정
        	
        	// 현재는 프로젝트 내에 임시 저장하고 분석이 끝나면 삭제하는 방식으로 메모리 관리.. 추후 개선 필요
        	String saveDir = "src/main/resources/static/uploadedExcelFiles";
        	
        	File savedFileA = new File(saveDir, fileA.getOriginalFilename());
        	File savedFileB = new File(saveDir, fileB.getOriginalFilename());
            fileA.transferTo(savedFileA);
            fileB.transferTo(savedFileB);
            
            // 나중에 쓰게 전역변수로 올리고
            ARoot = savedFileA.getAbsolutePath();
            BRoot = savedFileB.getAbsolutePath();
        	
            System.out.printf("File A saved at: {}", savedFileA.getAbsolutePath());
            System.out.printf("File B saved at: {}", savedFileB.getAbsolutePath());
            
            // ---------- 파일 업로드 종료 -----------

            // 지금 당장은 안씀. 나중에 쓸거임
            String py001 = new File("src/main/resources/static/comparator/ver001/ver001_1.py").getAbsolutePath();

            // Python 스크립트 경로 설정
            // String pythonScriptPath = new File("src/main/resources/scripts/comparisonVer001.py").getAbsolutePath();
            // 비교할 파일들의 시트 이름 가져오기
            String sheetNamePy = new File("src/main/resources/static/comparator/ver001/ver001_0.py").getAbsolutePath();
                        
            // Python 스크립트 실행 : ver001_0.py : 
            ProcessBuilder processBuilder = new ProcessBuilder(
            		// 파라미터로 보낼 것들.
                    "python", sheetNamePy, ARoot, BRoot
            );
            
            processBuilder.redirectErrorStream(true);
            Process process = processBuilder.start();

            // Python 스크립트 출력 읽기
            // json 형식으로 출력된 결과 읽어서 화면으로 던짐
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            StringBuilder output = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\n");
            }

            int exitCode = process.waitFor();
            if (exitCode == 0) {
                // JSON 응답 파싱 및 Thymeleaf로 전달
                Map<String, Object> result = new JSONObject(output.toString()).toMap();
                model.addAttr("pythonResult", result);
            } else {
                model.addAttribute("error", "Python script failed with exit code " + exitCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
            model.addAttribute("error", e.getMessage());
        }
        return "compareResult";  // 
           
            
            

        } 
    }
    
    
}
